
sacumi_melanjor_ATtiny2313.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000065e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000004a  00800060  0000065e  000006f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001a  008000aa  008000aa  0000073c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000073c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000076c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  000007ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b52  00000000  00000000  00000854  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005bf  00000000  00000000  000013a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000729  00000000  00000000  00001965  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000017c  00000000  00000000  00002090  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000080c  00000000  00000000  0000220c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000034c  00000000  00000000  00002a18  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00002d64  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	1b c0       	rjmp	.+54     	; 0x38 <__ctors_end>
   2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
   4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
   6:	31 c0       	rjmp	.+98     	; 0x6a <__bad_interrupt>
   8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
   a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
   c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
   e:	2d c0       	rjmp	.+90     	; 0x6a <__bad_interrupt>
  10:	2c c0       	rjmp	.+88     	; 0x6a <__bad_interrupt>
  12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
  14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
  16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
  18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
  1a:	4d c0       	rjmp	.+154    	; 0xb6 <__vector_13>
  1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
  1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
  20:	24 c0       	rjmp	.+72     	; 0x6a <__bad_interrupt>
  22:	23 c0       	rjmp	.+70     	; 0x6a <__bad_interrupt>
  24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
  26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
  28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
  2a:	a3 c0       	rjmp	.+326    	; 0x172 <button_tick+0x72>
  2c:	b4 c0       	rjmp	.+360    	; 0x196 <button_tick+0x96>
  2e:	bd c0       	rjmp	.+378    	; 0x1aa <button_tick+0xaa>
  30:	d0 c0       	rjmp	.+416    	; 0x1d2 <button_tick+0xd2>
  32:	00 c1       	rjmp	.+512    	; 0x234 <button_tick+0x134>
  34:	1b c1       	rjmp	.+566    	; 0x26c <button_tick+0x16c>
  36:	23 c1       	rjmp	.+582    	; 0x27e <button_tick+0x17e>

00000038 <__ctors_end>:
  38:	11 24       	eor	r1, r1
  3a:	1f be       	out	0x3f, r1	; 63
  3c:	cf ed       	ldi	r28, 0xDF	; 223
  3e:	cd bf       	out	0x3d, r28	; 61

00000040 <__do_copy_data>:
  40:	10 e0       	ldi	r17, 0x00	; 0
  42:	a0 e6       	ldi	r26, 0x60	; 96
  44:	b0 e0       	ldi	r27, 0x00	; 0
  46:	ee e5       	ldi	r30, 0x5E	; 94
  48:	f6 e0       	ldi	r31, 0x06	; 6
  4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
  4c:	05 90       	lpm	r0, Z+
  4e:	0d 92       	st	X+, r0
  50:	aa 3a       	cpi	r26, 0xAA	; 170
  52:	b1 07       	cpc	r27, r17
  54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
  56:	20 e0       	ldi	r18, 0x00	; 0
  58:	aa ea       	ldi	r26, 0xAA	; 170
  5a:	b0 e0       	ldi	r27, 0x00	; 0
  5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
  5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
  60:	a4 3c       	cpi	r26, 0xC4	; 196
  62:	b2 07       	cpc	r27, r18
  64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
  66:	54 d2       	rcall	.+1192   	; 0x510 <main>
  68:	f8 c2       	rjmp	.+1520   	; 0x65a <_exit>

0000006a <__bad_interrupt>:
  6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <null_function>:

void button_on_off_callback()
{
	board_led_status = !board_led_status;
	if (board_led_status) PORTD |= 1 << pin_board_led;
	else PORTD &= ~(1 << pin_board_led);
  6c:	08 95       	ret

0000006e <init_port>:
  6e:	81 e0       	ldi	r24, 0x01	; 1
  70:	81 bb       	out	0x11, r24	; 17
  72:	82 bb       	out	0x12, r24	; 18
  74:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <board_led_status>
  78:	88 e0       	ldi	r24, 0x08	; 8
  7a:	87 bb       	out	0x17, r24	; 23
  7c:	87 b3       	in	r24, 0x17	; 23
  7e:	84 60       	ori	r24, 0x04	; 4
  80:	87 bb       	out	0x17, r24	; 23
  82:	88 b3       	in	r24, 0x18	; 24
  84:	82 60       	ori	r24, 0x02	; 2
  86:	88 bb       	out	0x18, r24	; 24
  88:	88 b3       	in	r24, 0x18	; 24
  8a:	81 60       	ori	r24, 0x01	; 1
  8c:	88 bb       	out	0x18, r24	; 24
  8e:	82 b3       	in	r24, 0x12	; 18
  90:	80 64       	ori	r24, 0x40	; 64
  92:	82 bb       	out	0x12, r24	; 18
  94:	81 b3       	in	r24, 0x11	; 17
  96:	80 62       	ori	r24, 0x20	; 32
  98:	81 bb       	out	0x11, r24	; 17
  9a:	87 b3       	in	r24, 0x17	; 23
  9c:	80 61       	ori	r24, 0x10	; 16
  9e:	87 bb       	out	0x17, r24	; 23
  a0:	08 95       	ret

000000a2 <init_timers>:
  a2:	82 e0       	ldi	r24, 0x02	; 2
  a4:	80 bf       	out	0x30, r24	; 48
  a6:	83 e0       	ldi	r24, 0x03	; 3
  a8:	83 bf       	out	0x33, r24	; 51
  aa:	8e e3       	ldi	r24, 0x3E	; 62
  ac:	86 bf       	out	0x36, r24	; 54
  ae:	81 e0       	ldi	r24, 0x01	; 1
  b0:	89 bf       	out	0x39, r24	; 57
  b2:	88 bf       	out	0x38, r24	; 56
  b4:	08 95       	ret

000000b6 <__vector_13>:
  b6:	1f 92       	push	r1
  b8:	0f 92       	push	r0
  ba:	0f b6       	in	r0, 0x3f	; 63
  bc:	0f 92       	push	r0
  be:	11 24       	eor	r1, r1
  c0:	8f 93       	push	r24
  c2:	9f 93       	push	r25
  c4:	af 93       	push	r26
  c6:	bf 93       	push	r27
  c8:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <time_ms>
  cc:	90 91 bf 00 	lds	r25, 0x00BF	; 0x8000bf <time_ms+0x1>
  d0:	a0 91 c0 00 	lds	r26, 0x00C0	; 0x8000c0 <time_ms+0x2>
  d4:	b0 91 c1 00 	lds	r27, 0x00C1	; 0x8000c1 <time_ms+0x3>
  d8:	01 96       	adiw	r24, 0x01	; 1
  da:	a1 1d       	adc	r26, r1
  dc:	b1 1d       	adc	r27, r1
  de:	80 93 be 00 	sts	0x00BE, r24	; 0x8000be <time_ms>
  e2:	90 93 bf 00 	sts	0x00BF, r25	; 0x8000bf <time_ms+0x1>
  e6:	a0 93 c0 00 	sts	0x00C0, r26	; 0x8000c0 <time_ms+0x2>
  ea:	b0 93 c1 00 	sts	0x00C1, r27	; 0x8000c1 <time_ms+0x3>
  ee:	bf 91       	pop	r27
  f0:	af 91       	pop	r26
  f2:	9f 91       	pop	r25
  f4:	8f 91       	pop	r24
  f6:	0f 90       	pop	r0
  f8:	0f be       	out	0x3f, r0	; 63
  fa:	0f 90       	pop	r0
  fc:	1f 90       	pop	r1
  fe:	18 95       	reti

00000100 <button_tick>:
 100:	cf 92       	push	r12
 102:	df 92       	push	r13
 104:	ef 92       	push	r14
 106:	ff 92       	push	r15
 108:	cf 93       	push	r28
 10a:	df 93       	push	r29
 10c:	dc 01       	movw	r26, r24
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	0c 90       	ld	r0, X
 114:	02 c0       	rjmp	.+4      	; 0x11a <button_tick+0x1a>
 116:	88 0f       	add	r24, r24
 118:	99 1f       	adc	r25, r25
 11a:	0a 94       	dec	r0
 11c:	e2 f7       	brpl	.-8      	; 0x116 <button_tick+0x16>
 11e:	11 96       	adiw	r26, 0x01	; 1
 120:	ed 91       	ld	r30, X+
 122:	fc 91       	ld	r31, X
 124:	12 97       	sbiw	r26, 0x02	; 2
 126:	20 81       	ld	r18, Z
 128:	30 e0       	ldi	r19, 0x00	; 0
 12a:	82 23       	and	r24, r18
 12c:	93 23       	and	r25, r19
 12e:	18 96       	adiw	r26, 0x08	; 8
 130:	ec 91       	ld	r30, X
 132:	18 97       	sbiw	r26, 0x08	; 8
 134:	ee 23       	and	r30, r30
 136:	91 f0       	breq	.+36     	; 0x15c <button_tick+0x5c>
 138:	c0 90 be 00 	lds	r12, 0x00BE	; 0x8000be <time_ms>
 13c:	d0 90 bf 00 	lds	r13, 0x00BF	; 0x8000bf <time_ms+0x1>
 140:	e0 90 c0 00 	lds	r14, 0x00C0	; 0x8000c0 <time_ms+0x2>
 144:	f0 90 c1 00 	lds	r15, 0x00C1	; 0x8000c1 <time_ms+0x3>
 148:	14 96       	adiw	r26, 0x04	; 4
 14a:	4d 91       	ld	r20, X+
 14c:	5d 91       	ld	r21, X+
 14e:	6d 91       	ld	r22, X+
 150:	7c 91       	ld	r23, X
 152:	17 97       	sbiw	r26, 0x07	; 7
 154:	c4 1a       	sub	r12, r20
 156:	d5 0a       	sbc	r13, r21
 158:	e6 0a       	sbc	r14, r22
 15a:	f7 0a       	sbc	r15, r23
 15c:	4e 2f       	mov	r20, r30
 15e:	50 e0       	ldi	r21, 0x00	; 0
 160:	47 30       	cpi	r20, 0x07	; 7
 162:	51 05       	cpc	r21, r1
 164:	08 f0       	brcs	.+2      	; 0x168 <button_tick+0x68>
 166:	b1 c0       	rjmp	.+354    	; 0x2ca <button_tick+0x1ca>
 168:	ed 01       	movw	r28, r26
 16a:	fa 01       	movw	r30, r20
 16c:	eb 5e       	subi	r30, 0xEB	; 235
 16e:	ff 4f       	sbci	r31, 0xFF	; 255
 170:	09 94       	ijmp
 172:	89 2b       	or	r24, r25
 174:	09 f0       	breq	.+2      	; 0x178 <button_tick+0x78>
 176:	a9 c0       	rjmp	.+338    	; 0x2ca <button_tick+0x1ca>
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	88 87       	std	Y+8, r24	; 0x08
 17c:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <time_ms>
 180:	90 91 bf 00 	lds	r25, 0x00BF	; 0x8000bf <time_ms+0x1>
 184:	a0 91 c0 00 	lds	r26, 0x00C0	; 0x8000c0 <time_ms+0x2>
 188:	b0 91 c1 00 	lds	r27, 0x00C1	; 0x8000c1 <time_ms+0x3>
 18c:	8c 83       	std	Y+4, r24	; 0x04
 18e:	9d 83       	std	Y+5, r25	; 0x05
 190:	ae 83       	std	Y+6, r26	; 0x06
 192:	bf 83       	std	Y+7, r27	; 0x07
 194:	9a c0       	rjmp	.+308    	; 0x2ca <button_tick+0x1ca>
 196:	8f e0       	ldi	r24, 0x0F	; 15
 198:	c8 16       	cp	r12, r24
 19a:	d1 04       	cpc	r13, r1
 19c:	e1 04       	cpc	r14, r1
 19e:	f1 04       	cpc	r15, r1
 1a0:	08 f4       	brcc	.+2      	; 0x1a4 <button_tick+0xa4>
 1a2:	93 c0       	rjmp	.+294    	; 0x2ca <button_tick+0x1ca>
 1a4:	82 e0       	ldi	r24, 0x02	; 2
 1a6:	88 87       	std	Y+8, r24	; 0x08
 1a8:	90 c0       	rjmp	.+288    	; 0x2ca <button_tick+0x1ca>
 1aa:	89 2b       	or	r24, r25
 1ac:	11 f0       	breq	.+4      	; 0x1b2 <button_tick+0xb2>
 1ae:	18 86       	std	Y+8, r1	; 0x08
 1b0:	8c c0       	rjmp	.+280    	; 0x2ca <button_tick+0x1ca>
 1b2:	83 e7       	ldi	r24, 0x73	; 115
 1b4:	c8 16       	cp	r12, r24
 1b6:	d1 04       	cpc	r13, r1
 1b8:	e1 04       	cpc	r14, r1
 1ba:	f1 04       	cpc	r15, r1
 1bc:	08 f4       	brcc	.+2      	; 0x1c0 <button_tick+0xc0>
 1be:	85 c0       	rjmp	.+266    	; 0x2ca <button_tick+0x1ca>
 1c0:	83 e0       	ldi	r24, 0x03	; 3
 1c2:	88 87       	std	Y+8, r24	; 0x08
 1c4:	8b 81       	ldd	r24, Y+3	; 0x03
 1c6:	81 11       	cpse	r24, r1
 1c8:	80 c0       	rjmp	.+256    	; 0x2ca <button_tick+0x1ca>
 1ca:	ed 85       	ldd	r30, Y+13	; 0x0d
 1cc:	fe 85       	ldd	r31, Y+14	; 0x0e
 1ce:	09 95       	icall
 1d0:	7c c0       	rjmp	.+248    	; 0x2ca <button_tick+0x1ca>
 1d2:	89 2b       	or	r24, r25
 1d4:	c9 f0       	breq	.+50     	; 0x208 <button_tick+0x108>
 1d6:	85 e0       	ldi	r24, 0x05	; 5
 1d8:	88 87       	std	Y+8, r24	; 0x08
 1da:	83 e0       	ldi	r24, 0x03	; 3
 1dc:	8b 8b       	std	Y+19, r24	; 0x13
 1de:	8c 81       	ldd	r24, Y+4	; 0x04
 1e0:	9d 81       	ldd	r25, Y+5	; 0x05
 1e2:	ae 81       	ldd	r26, Y+6	; 0x06
 1e4:	bf 81       	ldd	r27, Y+7	; 0x07
 1e6:	8c 8b       	std	Y+20, r24	; 0x14
 1e8:	9d 8b       	std	Y+21, r25	; 0x15
 1ea:	ae 8b       	std	Y+22, r26	; 0x16
 1ec:	bf 8b       	std	Y+23, r27	; 0x17
 1ee:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <time_ms>
 1f2:	90 91 bf 00 	lds	r25, 0x00BF	; 0x8000bf <time_ms+0x1>
 1f6:	a0 91 c0 00 	lds	r26, 0x00C0	; 0x8000c0 <time_ms+0x2>
 1fa:	b0 91 c1 00 	lds	r27, 0x00C1	; 0x8000c1 <time_ms+0x3>
 1fe:	8c 83       	std	Y+4, r24	; 0x04
 200:	9d 83       	std	Y+5, r25	; 0x05
 202:	ae 83       	std	Y+6, r26	; 0x06
 204:	bf 83       	std	Y+7, r27	; 0x07
 206:	61 c0       	rjmp	.+194    	; 0x2ca <button_tick+0x1ca>
 208:	8b 81       	ldd	r24, Y+3	; 0x03
 20a:	82 30       	cpi	r24, 0x02	; 2
 20c:	09 f0       	breq	.+2      	; 0x210 <button_tick+0x110>
 20e:	5d c0       	rjmp	.+186    	; 0x2ca <button_tick+0x1ca>
 210:	89 85       	ldd	r24, Y+9	; 0x09
 212:	9a 85       	ldd	r25, Y+10	; 0x0a
 214:	ab 85       	ldd	r26, Y+11	; 0x0b
 216:	bc 85       	ldd	r27, Y+12	; 0x0c
 218:	c8 16       	cp	r12, r24
 21a:	d9 06       	cpc	r13, r25
 21c:	ea 06       	cpc	r14, r26
 21e:	fb 06       	cpc	r15, r27
 220:	08 f4       	brcc	.+2      	; 0x224 <button_tick+0x124>
 222:	53 c0       	rjmp	.+166    	; 0x2ca <button_tick+0x1ca>
 224:	84 e0       	ldi	r24, 0x04	; 4
 226:	88 87       	std	Y+8, r24	; 0x08
 228:	83 e0       	ldi	r24, 0x03	; 3
 22a:	8b 8b       	std	Y+19, r24	; 0x13
 22c:	ef 85       	ldd	r30, Y+15	; 0x0f
 22e:	f8 89       	ldd	r31, Y+16	; 0x10
 230:	09 95       	icall
 232:	4b c0       	rjmp	.+150    	; 0x2ca <button_tick+0x1ca>
 234:	89 2b       	or	r24, r25
 236:	09 f4       	brne	.+2      	; 0x23a <button_tick+0x13a>
 238:	48 c0       	rjmp	.+144    	; 0x2ca <button_tick+0x1ca>
 23a:	85 e0       	ldi	r24, 0x05	; 5
 23c:	88 87       	std	Y+8, r24	; 0x08
 23e:	84 e0       	ldi	r24, 0x04	; 4
 240:	8b 8b       	std	Y+19, r24	; 0x13
 242:	8c 81       	ldd	r24, Y+4	; 0x04
 244:	9d 81       	ldd	r25, Y+5	; 0x05
 246:	ae 81       	ldd	r26, Y+6	; 0x06
 248:	bf 81       	ldd	r27, Y+7	; 0x07
 24a:	8c 8b       	std	Y+20, r24	; 0x14
 24c:	9d 8b       	std	Y+21, r25	; 0x15
 24e:	ae 8b       	std	Y+22, r26	; 0x16
 250:	bf 8b       	std	Y+23, r27	; 0x17
 252:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <time_ms>
 256:	90 91 bf 00 	lds	r25, 0x00BF	; 0x8000bf <time_ms+0x1>
 25a:	a0 91 c0 00 	lds	r26, 0x00C0	; 0x8000c0 <time_ms+0x2>
 25e:	b0 91 c1 00 	lds	r27, 0x00C1	; 0x8000c1 <time_ms+0x3>
 262:	8c 83       	std	Y+4, r24	; 0x04
 264:	9d 83       	std	Y+5, r25	; 0x05
 266:	ae 83       	std	Y+6, r26	; 0x06
 268:	bf 83       	std	Y+7, r27	; 0x07
 26a:	2f c0       	rjmp	.+94     	; 0x2ca <button_tick+0x1ca>
 26c:	8f e0       	ldi	r24, 0x0F	; 15
 26e:	c8 16       	cp	r12, r24
 270:	d1 04       	cpc	r13, r1
 272:	e1 04       	cpc	r14, r1
 274:	f1 04       	cpc	r15, r1
 276:	48 f1       	brcs	.+82     	; 0x2ca <button_tick+0x1ca>
 278:	86 e0       	ldi	r24, 0x06	; 6
 27a:	88 87       	std	Y+8, r24	; 0x08
 27c:	26 c0       	rjmp	.+76     	; 0x2ca <button_tick+0x1ca>
 27e:	89 2b       	or	r24, r25
 280:	59 f4       	brne	.+22     	; 0x298 <button_tick+0x198>
 282:	8c 89       	ldd	r24, Y+20	; 0x14
 284:	9d 89       	ldd	r25, Y+21	; 0x15
 286:	ae 89       	ldd	r26, Y+22	; 0x16
 288:	bf 89       	ldd	r27, Y+23	; 0x17
 28a:	8c 83       	std	Y+4, r24	; 0x04
 28c:	9d 83       	std	Y+5, r25	; 0x05
 28e:	ae 83       	std	Y+6, r26	; 0x06
 290:	bf 83       	std	Y+7, r27	; 0x07
 292:	8b 89       	ldd	r24, Y+19	; 0x13
 294:	88 87       	std	Y+8, r24	; 0x08
 296:	19 c0       	rjmp	.+50     	; 0x2ca <button_tick+0x1ca>
 298:	83 e7       	ldi	r24, 0x73	; 115
 29a:	c8 16       	cp	r12, r24
 29c:	d1 04       	cpc	r13, r1
 29e:	e1 04       	cpc	r14, r1
 2a0:	f1 04       	cpc	r15, r1
 2a2:	98 f0       	brcs	.+38     	; 0x2ca <button_tick+0x1ca>
 2a4:	18 86       	std	Y+8, r1	; 0x08
 2a6:	8b 81       	ldd	r24, Y+3	; 0x03
 2a8:	82 30       	cpi	r24, 0x02	; 2
 2aa:	31 f4       	brne	.+12     	; 0x2b8 <button_tick+0x1b8>
 2ac:	8b 89       	ldd	r24, Y+19	; 0x13
 2ae:	83 30       	cpi	r24, 0x03	; 3
 2b0:	19 f4       	brne	.+6      	; 0x2b8 <button_tick+0x1b8>
 2b2:	ed 85       	ldd	r30, Y+13	; 0x0d
 2b4:	fe 85       	ldd	r31, Y+14	; 0x0e
 2b6:	09 95       	icall
 2b8:	8b 81       	ldd	r24, Y+3	; 0x03
 2ba:	82 30       	cpi	r24, 0x02	; 2
 2bc:	31 f4       	brne	.+12     	; 0x2ca <button_tick+0x1ca>
 2be:	8b 89       	ldd	r24, Y+19	; 0x13
 2c0:	84 30       	cpi	r24, 0x04	; 4
 2c2:	19 f4       	brne	.+6      	; 0x2ca <button_tick+0x1ca>
 2c4:	e9 89       	ldd	r30, Y+17	; 0x11
 2c6:	fa 89       	ldd	r31, Y+18	; 0x12
 2c8:	09 95       	icall
 2ca:	df 91       	pop	r29
 2cc:	cf 91       	pop	r28
 2ce:	ff 90       	pop	r15
 2d0:	ef 90       	pop	r14
 2d2:	df 90       	pop	r13
 2d4:	cf 90       	pop	r12
 2d6:	08 95       	ret

000002d8 <motion_forward>:
}

// moving forward
void motion_forward()
{
	motion_status = FORWARD;
 2d8:	81 e0       	ldi	r24, 0x01	; 1
 2da:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <motion_status>
	PORTD |= 1 << pin_motion_forward;
 2de:	82 b3       	in	r24, 0x12	; 18
 2e0:	80 62       	ori	r24, 0x20	; 32
 2e2:	82 bb       	out	0x12, r24	; 18
	PORTB &= ~(1 << pin_motion_reverse);
 2e4:	88 b3       	in	r24, 0x18	; 24
 2e6:	8f 7e       	andi	r24, 0xEF	; 239
 2e8:	88 bb       	out	0x18, r24	; 24
	// turn on on/off led
	PORTB |= 1 << pin_on_off_led;
 2ea:	88 b3       	in	r24, 0x18	; 24
 2ec:	84 60       	ori	r24, 0x04	; 4
 2ee:	88 bb       	out	0x18, r24	; 24
 2f0:	08 95       	ret

000002f2 <motion_reverse>:
}

// moving reverse
void motion_reverse()
{
	motion_status = REVERSE;
 2f2:	82 e0       	ldi	r24, 0x02	; 2
 2f4:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <motion_status>
	PORTB |= 1 << pin_motion_reverse;
 2f8:	88 b3       	in	r24, 0x18	; 24
 2fa:	80 61       	ori	r24, 0x10	; 16
 2fc:	88 bb       	out	0x18, r24	; 24
	PORTD &= ~(1 << pin_motion_forward);
 2fe:	82 b3       	in	r24, 0x12	; 18
 300:	8f 7d       	andi	r24, 0xDF	; 223
 302:	82 bb       	out	0x12, r24	; 18
 304:	08 95       	ret

00000306 <motion_off>:
}

// don't moving
void motion_off()
{
	motion_status = STOP;
 306:	10 92 b1 00 	sts	0x00B1, r1	; 0x8000b1 <motion_status>
	PORTD &= ~(1 << pin_motion_forward);
 30a:	82 b3       	in	r24, 0x12	; 18
 30c:	8f 7d       	andi	r24, 0xDF	; 223
 30e:	82 bb       	out	0x12, r24	; 18
	PORTB &= ~(1 << pin_motion_reverse);
 310:	88 b3       	in	r24, 0x18	; 24
 312:	8f 7e       	andi	r24, 0xEF	; 239
 314:	88 bb       	out	0x18, r24	; 24
	// turn off on/off led
	PORTB &= ~(1 << pin_on_off_led);
 316:	88 b3       	in	r24, 0x18	; 24
 318:	8b 7f       	andi	r24, 0xFB	; 251
 31a:	88 bb       	out	0x18, r24	; 24
 31c:	08 95       	ret

0000031e <reset_led_on>:
	proccess_status(button_red_long_release_click);
}

void reset_led_on()
{
	PORTB |= 1 << pin_reset_led;
 31e:	88 b3       	in	r24, 0x18	; 24
 320:	88 60       	ori	r24, 0x08	; 8
 322:	88 bb       	out	0x18, r24	; 24
	reset_led_status = true;
 324:	81 e0       	ldi	r24, 0x01	; 1
 326:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <reset_led_status>
 32a:	08 95       	ret

0000032c <reset_led_off>:
}

void reset_led_off()
{
	PORTB &= ~(1 << pin_reset_led);
 32c:	88 b3       	in	r24, 0x18	; 24
 32e:	87 7f       	andi	r24, 0xF7	; 247
 330:	88 bb       	out	0x18, r24	; 24
	reset_led_status = false;
 332:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <reset_led_status>
 336:	08 95       	ret

00000338 <proccess_status>:
	PORTB &= ~(1 << pin_on_off_led);
}

// status proccessing
void proccess_status(uint8_t button_t)
{
 338:	cf 93       	push	r28
 33a:	c8 2f       	mov	r28, r24
	switch (main_status)
 33c:	80 91 c3 00 	lds	r24, 0x00C3	; 0x8000c3 <main_status>
 340:	82 30       	cpi	r24, 0x02	; 2
 342:	09 f4       	brne	.+2      	; 0x346 <proccess_status+0xe>
 344:	68 c0       	rjmp	.+208    	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 346:	28 f4       	brcc	.+10     	; 0x352 <proccess_status+0x1a>
 348:	88 23       	and	r24, r24
 34a:	51 f0       	breq	.+20     	; 0x360 <proccess_status+0x28>
 34c:	81 30       	cpi	r24, 0x01	; 1
 34e:	79 f0       	breq	.+30     	; 0x36e <proccess_status+0x36>
 350:	c1 c0       	rjmp	.+386    	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 352:	83 30       	cpi	r24, 0x03	; 3
 354:	09 f4       	brne	.+2      	; 0x358 <proccess_status+0x20>
 356:	8e c0       	rjmp	.+284    	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 358:	85 30       	cpi	r24, 0x05	; 5
 35a:	09 f4       	brne	.+2      	; 0x35e <proccess_status+0x26>
 35c:	b6 c0       	rjmp	.+364    	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 35e:	ba c0       	rjmp	.+372    	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
	{
		case MAIN_STOP:
		if (button_t == button_on_off_single_click)
 360:	c1 11       	cpse	r28, r1
 362:	b8 c0       	rjmp	.+368    	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
		{
			main_status = MOVING_FORWARD;
 364:	81 e0       	ldi	r24, 0x01	; 1
 366:	80 93 c3 00 	sts	0x00C3, r24	; 0x8000c3 <main_status>
			motion_forward();
 36a:	b6 df       	rcall	.-148    	; 0x2d8 <motion_forward>
 36c:	b3 c0       	rjmp	.+358    	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
			
		}
		break;
		
		case MOVING_FORWARD:
		if (button_t == button_on_off_single_click)
 36e:	c1 11       	cpse	r28, r1
 370:	05 c0       	rjmp	.+10     	; 0x37c <proccess_status+0x44>
		{
			main_status = MAIN_STOP;
 372:	10 92 c3 00 	sts	0x00C3, r1	; 0x8000c3 <main_status>
			motion_off();
 376:	c7 df       	rcall	.-114    	; 0x306 <motion_off>
			reset_led_off();
 378:	d9 df       	rcall	.-78     	; 0x32c <reset_led_off>
 37a:	ac c0       	rjmp	.+344    	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
		} else if (button_t == button_reset_single_click)
 37c:	c1 30       	cpi	r28, 0x01	; 1
 37e:	d1 f4       	brne	.+52     	; 0x3b4 <proccess_status+0x7c>
		{
			main_status = MOVING_REVERSE;
 380:	82 e0       	ldi	r24, 0x02	; 2
 382:	80 93 c3 00 	sts	0x00C3, r24	; 0x8000c3 <main_status>
			motion_reverse();
 386:	b5 df       	rcall	.-150    	; 0x2f2 <motion_reverse>
			time_counter_motion_reverse = time_ms + motion_reverse_blink_period;
 388:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <time_ms>
 38c:	90 91 bf 00 	lds	r25, 0x00BF	; 0x8000bf <time_ms+0x1>
 390:	a0 91 c0 00 	lds	r26, 0x00C0	; 0x8000c0 <time_ms+0x2>
 394:	b0 91 c1 00 	lds	r27, 0x00C1	; 0x8000c1 <time_ms+0x3>
 398:	88 51       	subi	r24, 0x18	; 24
 39a:	9c 4f       	sbci	r25, 0xFC	; 252
 39c:	af 4f       	sbci	r26, 0xFF	; 255
 39e:	bf 4f       	sbci	r27, 0xFF	; 255
 3a0:	80 93 b6 00 	sts	0x00B6, r24	; 0x8000b6 <time_counter_motion_reverse>
 3a4:	90 93 b7 00 	sts	0x00B7, r25	; 0x8000b7 <time_counter_motion_reverse+0x1>
 3a8:	a0 93 b8 00 	sts	0x00B8, r26	; 0x8000b8 <time_counter_motion_reverse+0x2>
 3ac:	b0 93 b9 00 	sts	0x00B9, r27	; 0x8000b9 <time_counter_motion_reverse+0x3>
			reset_led_on();
 3b0:	b6 df       	rcall	.-148    	; 0x31e <reset_led_on>
 3b2:	90 c0       	rjmp	.+288    	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
		} else if (button_t == button_reset_long_press_click)
 3b4:	c2 30       	cpi	r28, 0x02	; 2
 3b6:	09 f0       	breq	.+2      	; 0x3ba <proccess_status+0x82>
 3b8:	8d c0       	rjmp	.+282    	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
		{
			main_status = MOVING_MIX;
 3ba:	83 e0       	ldi	r24, 0x03	; 3
 3bc:	80 93 c3 00 	sts	0x00C3, r24	; 0x8000c3 <main_status>
			motion_mix_period_counter = 0;
 3c0:	10 92 af 00 	sts	0x00AF, r1	; 0x8000af <motion_mix_period_counter>
			motion_mix_time_counter = 0;
 3c4:	10 92 ae 00 	sts	0x00AE, r1	; 0x8000ae <motion_mix_time_counter>
			test_timer2 = time_ms;
 3c8:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <time_ms>
 3cc:	90 91 bf 00 	lds	r25, 0x00BF	; 0x8000bf <time_ms+0x1>
 3d0:	a0 91 c0 00 	lds	r26, 0x00C0	; 0x8000c0 <time_ms+0x2>
 3d4:	b0 91 c1 00 	lds	r27, 0x00C1	; 0x8000c1 <time_ms+0x3>
 3d8:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__data_end>
 3dc:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__data_end+0x1>
 3e0:	a0 93 ac 00 	sts	0x00AC, r26	; 0x8000ac <__data_end+0x2>
 3e4:	b0 93 ad 00 	sts	0x00AD, r27	; 0x8000ad <__data_end+0x3>
			motion_reverse();
 3e8:	84 df       	rcall	.-248    	; 0x2f2 <motion_reverse>
			time_counter_motion_mix = time_ms + motion_mix_blink_period;
 3ea:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <time_ms>
 3ee:	90 91 bf 00 	lds	r25, 0x00BF	; 0x8000bf <time_ms+0x1>
 3f2:	a0 91 c0 00 	lds	r26, 0x00C0	; 0x8000c0 <time_ms+0x2>
 3f6:	b0 91 c1 00 	lds	r27, 0x00C1	; 0x8000c1 <time_ms+0x3>
 3fa:	8c 50       	subi	r24, 0x0C	; 12
 3fc:	9e 4f       	sbci	r25, 0xFE	; 254
 3fe:	af 4f       	sbci	r26, 0xFF	; 255
 400:	bf 4f       	sbci	r27, 0xFF	; 255
 402:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <time_counter_motion_mix>
 406:	90 93 b3 00 	sts	0x00B3, r25	; 0x8000b3 <time_counter_motion_mix+0x1>
 40a:	a0 93 b4 00 	sts	0x00B4, r26	; 0x8000b4 <time_counter_motion_mix+0x2>
 40e:	b0 93 b5 00 	sts	0x00B5, r27	; 0x8000b5 <time_counter_motion_mix+0x3>
			reset_led_on();
 412:	85 df       	rcall	.-246    	; 0x31e <reset_led_on>
 414:	5f c0       	rjmp	.+190    	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
		}
		break;
		
		case MOVING_REVERSE:
		if (button_t == button_on_off_single_click)
 416:	c1 11       	cpse	r28, r1
 418:	05 c0       	rjmp	.+10     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
		{
			main_status = MAIN_STOP;
 41a:	10 92 c3 00 	sts	0x00C3, r1	; 0x8000c3 <main_status>
			motion_off();
 41e:	73 df       	rcall	.-282    	; 0x306 <motion_off>
			reset_led_off();
 420:	85 df       	rcall	.-246    	; 0x32c <reset_led_off>
 422:	58 c0       	rjmp	.+176    	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
		} else if (button_t == button_reset_single_click)
 424:	c1 30       	cpi	r28, 0x01	; 1
 426:	31 f4       	brne	.+12     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
		{
			main_status = MOVING_FORWARD;
 428:	81 e0       	ldi	r24, 0x01	; 1
 42a:	80 93 c3 00 	sts	0x00C3, r24	; 0x8000c3 <main_status>
			motion_forward();
 42e:	54 df       	rcall	.-344    	; 0x2d8 <motion_forward>
			reset_led_off();
 430:	7d df       	rcall	.-262    	; 0x32c <reset_led_off>
 432:	50 c0       	rjmp	.+160    	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
		} else if (button_t == button_reset_long_press_click)
 434:	c2 30       	cpi	r28, 0x02	; 2
 436:	09 f0       	breq	.+2      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 438:	4d c0       	rjmp	.+154    	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
		{
			main_status = MOVING_MIX;
 43a:	83 e0       	ldi	r24, 0x03	; 3
 43c:	80 93 c3 00 	sts	0x00C3, r24	; 0x8000c3 <main_status>
			motion_mix_period_counter = 0;
 440:	10 92 af 00 	sts	0x00AF, r1	; 0x8000af <motion_mix_period_counter>
			motion_mix_time_counter = 0;
 444:	10 92 ae 00 	sts	0x00AE, r1	; 0x8000ae <motion_mix_time_counter>
			motion_forward();
 448:	47 df       	rcall	.-370    	; 0x2d8 <motion_forward>
			time_counter_motion_mix = time_ms + motion_mix_blink_period;
 44a:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <time_ms>
 44e:	90 91 bf 00 	lds	r25, 0x00BF	; 0x8000bf <time_ms+0x1>
 452:	a0 91 c0 00 	lds	r26, 0x00C0	; 0x8000c0 <time_ms+0x2>
 456:	b0 91 c1 00 	lds	r27, 0x00C1	; 0x8000c1 <time_ms+0x3>
 45a:	8c 50       	subi	r24, 0x0C	; 12
 45c:	9e 4f       	sbci	r25, 0xFE	; 254
 45e:	af 4f       	sbci	r26, 0xFF	; 255
 460:	bf 4f       	sbci	r27, 0xFF	; 255
 462:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <time_counter_motion_mix>
 466:	90 93 b3 00 	sts	0x00B3, r25	; 0x8000b3 <time_counter_motion_mix+0x1>
 46a:	a0 93 b4 00 	sts	0x00B4, r26	; 0x8000b4 <time_counter_motion_mix+0x2>
 46e:	b0 93 b5 00 	sts	0x00B5, r27	; 0x8000b5 <time_counter_motion_mix+0x3>
 472:	30 c0       	rjmp	.+96     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
		}
		break;
		
		case MOVING_MIX:
		if (button_t == button_on_off_single_click)
 474:	c1 11       	cpse	r28, r1
 476:	06 c0       	rjmp	.+12     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
		{
			main_status = MOVING_FORWARD;
 478:	81 e0       	ldi	r24, 0x01	; 1
 47a:	80 93 c3 00 	sts	0x00C3, r24	; 0x8000c3 <main_status>
			motion_forward();
 47e:	2c df       	rcall	.-424    	; 0x2d8 <motion_forward>
			reset_led_off();
 480:	55 df       	rcall	.-342    	; 0x32c <reset_led_off>
 482:	28 c0       	rjmp	.+80     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
		} else if (button_t == button_reset_single_click)
 484:	c1 30       	cpi	r28, 0x01	; 1
 486:	31 f4       	brne	.+12     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
		{
			main_status = MOVING_FORWARD;
 488:	81 e0       	ldi	r24, 0x01	; 1
 48a:	80 93 c3 00 	sts	0x00C3, r24	; 0x8000c3 <main_status>
			motion_forward();
 48e:	24 df       	rcall	.-440    	; 0x2d8 <motion_forward>
			reset_led_off();
 490:	4d df       	rcall	.-358    	; 0x32c <reset_led_off>
 492:	20 c0       	rjmp	.+64     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
		} else if (button_t == button_reset_long_press_click)
 494:	c2 30       	cpi	r28, 0x02	; 2
 496:	f1 f4       	brne	.+60     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
		{
			motion_mix_period_counter = 0;
 498:	10 92 af 00 	sts	0x00AF, r1	; 0x8000af <motion_mix_period_counter>
			motion_mix_time_counter = 0;
 49c:	10 92 ae 00 	sts	0x00AE, r1	; 0x8000ae <motion_mix_time_counter>
			time_counter_motion_mix = time_ms + motion_mix_blink_period;
 4a0:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <time_ms>
 4a4:	90 91 bf 00 	lds	r25, 0x00BF	; 0x8000bf <time_ms+0x1>
 4a8:	a0 91 c0 00 	lds	r26, 0x00C0	; 0x8000c0 <time_ms+0x2>
 4ac:	b0 91 c1 00 	lds	r27, 0x00C1	; 0x8000c1 <time_ms+0x3>
 4b0:	8c 50       	subi	r24, 0x0C	; 12
 4b2:	9e 4f       	sbci	r25, 0xFE	; 254
 4b4:	af 4f       	sbci	r26, 0xFF	; 255
 4b6:	bf 4f       	sbci	r27, 0xFF	; 255
 4b8:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <time_counter_motion_mix>
 4bc:	90 93 b3 00 	sts	0x00B3, r25	; 0x8000b3 <time_counter_motion_mix+0x1>
 4c0:	a0 93 b4 00 	sts	0x00B4, r26	; 0x8000b4 <time_counter_motion_mix+0x2>
 4c4:	b0 93 b5 00 	sts	0x00B5, r27	; 0x8000b5 <time_counter_motion_mix+0x3>
 4c8:	05 c0       	rjmp	.+10     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
		case RED_BUTTON_PRESSING:

		break;
		
		case RED_BUTTON_RELEASED:
		if (button_t == button_reset_single_click)
 4ca:	c1 30       	cpi	r28, 0x01	; 1
 4cc:	19 f4       	brne	.+6      	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
		{
			main_status = MAIN_STOP;
 4ce:	10 92 c3 00 	sts	0x00C3, r1	; 0x8000c3 <main_status>
			reset_led_off();
 4d2:	2c df       	rcall	.-424    	; 0x32c <reset_led_off>
		}
		break;	
	}
	
	if (button_t == button_red_long_press_click)
 4d4:	c3 30       	cpi	r28, 0x03	; 3
 4d6:	31 f4       	brne	.+12     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
	{
		main_status = RED_BUTTON_PRESSING;
 4d8:	84 e0       	ldi	r24, 0x04	; 4
 4da:	80 93 c3 00 	sts	0x00C3, r24	; 0x8000c3 <main_status>
		motion_off();
 4de:	13 df       	rcall	.-474    	; 0x306 <motion_off>
		reset_led_on();
 4e0:	1e df       	rcall	.-452    	; 0x31e <reset_led_on>
 4e2:	05 c0       	rjmp	.+10     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
	} else if (button_t == button_red_long_release_click)
 4e4:	c4 30       	cpi	r28, 0x04	; 4
 4e6:	19 f4       	brne	.+6      	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
	{
		main_status = RED_BUTTON_RELEASED;
 4e8:	85 e0       	ldi	r24, 0x05	; 5
 4ea:	80 93 c3 00 	sts	0x00C3, r24	; 0x8000c3 <main_status>
	}
}
 4ee:	cf 91       	pop	r28
 4f0:	08 95       	ret

000004f2 <button_on_off_single_click_callback>:

void button_on_off_single_click_callback()
{
	proccess_status(button_on_off_single_click);
 4f2:	80 e0       	ldi	r24, 0x00	; 0
 4f4:	21 df       	rcall	.-446    	; 0x338 <proccess_status>
 4f6:	08 95       	ret

000004f8 <button_reset_single_click_callback>:
}

void button_reset_single_click_callback()
{
	proccess_status(button_reset_single_click);
 4f8:	81 e0       	ldi	r24, 0x01	; 1
 4fa:	1e df       	rcall	.-452    	; 0x338 <proccess_status>
 4fc:	08 95       	ret

000004fe <button_reset_long_press_click_callback>:
}

void button_reset_long_press_click_callback()
{
	proccess_status(button_reset_long_press_click);
 4fe:	82 e0       	ldi	r24, 0x02	; 2
 500:	1b df       	rcall	.-458    	; 0x338 <proccess_status>
 502:	08 95       	ret

00000504 <button_red_long_press_click_callback>:
}

void button_red_long_press_click_callback()
{
	proccess_status(button_red_long_press_click);
 504:	83 e0       	ldi	r24, 0x03	; 3
 506:	18 df       	rcall	.-464    	; 0x338 <proccess_status>
 508:	08 95       	ret

0000050a <button_red_long_release_click_callback>:
}

void button_red_long_release_click_callback()
{
	proccess_status(button_red_long_release_click);
 50a:	84 e0       	ldi	r24, 0x04	; 4
 50c:	15 df       	rcall	.-470    	; 0x338 <proccess_status>
 50e:	08 95       	ret

00000510 <main>:
#include <avr/interrupt.h>
#include "sacumi_melanjor_ATtiny2313.h"

int main(void)
{
	init_port();
 510:	ae dd       	rcall	.-1188   	; 0x6e <init_port>
	init_timers();
 512:	c7 dd       	rcall	.-1138   	; 0xa2 <init_timers>
	sei();
 514:	78 94       	sei
	
    while (1) 
    {	
		if (time_counter_buttons < time_ms)
 516:	40 91 ba 00 	lds	r20, 0x00BA	; 0x8000ba <time_counter_buttons>
 51a:	50 91 bb 00 	lds	r21, 0x00BB	; 0x8000bb <time_counter_buttons+0x1>
 51e:	60 91 bc 00 	lds	r22, 0x00BC	; 0x8000bc <time_counter_buttons+0x2>
 522:	70 91 bd 00 	lds	r23, 0x00BD	; 0x8000bd <time_counter_buttons+0x3>
 526:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <time_ms>
 52a:	90 91 bf 00 	lds	r25, 0x00BF	; 0x8000bf <time_ms+0x1>
 52e:	a0 91 c0 00 	lds	r26, 0x00C0	; 0x8000c0 <time_ms+0x2>
 532:	b0 91 c1 00 	lds	r27, 0x00C1	; 0x8000c1 <time_ms+0x3>
 536:	48 17       	cp	r20, r24
 538:	59 07       	cpc	r21, r25
 53a:	6a 07       	cpc	r22, r26
 53c:	7b 07       	cpc	r23, r27
 53e:	a0 f4       	brcc	.+40     	; 0x568 <main+0x58>
		{
			time_counter_buttons = time_ms + 1;
 540:	01 96       	adiw	r24, 0x01	; 1
 542:	a1 1d       	adc	r26, r1
 544:	b1 1d       	adc	r27, r1
 546:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <time_counter_buttons>
 54a:	90 93 bb 00 	sts	0x00BB, r25	; 0x8000bb <time_counter_buttons+0x1>
 54e:	a0 93 bc 00 	sts	0x00BC, r26	; 0x8000bc <time_counter_buttons+0x2>
 552:	b0 93 bd 00 	sts	0x00BD, r27	; 0x8000bd <time_counter_buttons+0x3>
			
			button_tick(&button_on_off);
 556:	80 e9       	ldi	r24, 0x90	; 144
 558:	90 e0       	ldi	r25, 0x00	; 0
 55a:	d2 dd       	rcall	.-1116   	; 0x100 <button_tick>
			button_tick(&button_reset);
 55c:	88 e7       	ldi	r24, 0x78	; 120
 55e:	90 e0       	ldi	r25, 0x00	; 0
 560:	cf dd       	rcall	.-1122   	; 0x100 <button_tick>
			button_tick(&button_red);
 562:	80 e6       	ldi	r24, 0x60	; 96
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	cc dd       	rcall	.-1128   	; 0x100 <button_tick>
		}
		
		if (main_status == MOVING_REVERSE && time_counter_motion_reverse < time_ms)
 568:	80 91 c3 00 	lds	r24, 0x00C3	; 0x8000c3 <main_status>
 56c:	82 30       	cpi	r24, 0x02	; 2
 56e:	41 f5       	brne	.+80     	; 0x5c0 <main+0xb0>
 570:	40 91 b6 00 	lds	r20, 0x00B6	; 0x8000b6 <time_counter_motion_reverse>
 574:	50 91 b7 00 	lds	r21, 0x00B7	; 0x8000b7 <time_counter_motion_reverse+0x1>
 578:	60 91 b8 00 	lds	r22, 0x00B8	; 0x8000b8 <time_counter_motion_reverse+0x2>
 57c:	70 91 b9 00 	lds	r23, 0x00B9	; 0x8000b9 <time_counter_motion_reverse+0x3>
 580:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <time_ms>
 584:	90 91 bf 00 	lds	r25, 0x00BF	; 0x8000bf <time_ms+0x1>
 588:	a0 91 c0 00 	lds	r26, 0x00C0	; 0x8000c0 <time_ms+0x2>
 58c:	b0 91 c1 00 	lds	r27, 0x00C1	; 0x8000c1 <time_ms+0x3>
 590:	48 17       	cp	r20, r24
 592:	59 07       	cpc	r21, r25
 594:	6a 07       	cpc	r22, r26
 596:	7b 07       	cpc	r23, r27
 598:	98 f4       	brcc	.+38     	; 0x5c0 <main+0xb0>
		{
			time_counter_motion_reverse = time_ms + motion_reverse_blink_period;
 59a:	88 51       	subi	r24, 0x18	; 24
 59c:	9c 4f       	sbci	r25, 0xFC	; 252
 59e:	af 4f       	sbci	r26, 0xFF	; 255
 5a0:	bf 4f       	sbci	r27, 0xFF	; 255
 5a2:	80 93 b6 00 	sts	0x00B6, r24	; 0x8000b6 <time_counter_motion_reverse>
 5a6:	90 93 b7 00 	sts	0x00B7, r25	; 0x8000b7 <time_counter_motion_reverse+0x1>
 5aa:	a0 93 b8 00 	sts	0x00B8, r26	; 0x8000b8 <time_counter_motion_reverse+0x2>
 5ae:	b0 93 b9 00 	sts	0x00B9, r27	; 0x8000b9 <time_counter_motion_reverse+0x3>
			
			if (reset_led_status) reset_led_off();
 5b2:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <reset_led_status>
 5b6:	88 23       	and	r24, r24
 5b8:	11 f0       	breq	.+4      	; 0x5be <main+0xae>
 5ba:	b8 de       	rcall	.-656    	; 0x32c <reset_led_off>
 5bc:	01 c0       	rjmp	.+2      	; 0x5c0 <main+0xb0>
			else reset_led_on();
 5be:	af de       	rcall	.-674    	; 0x31e <reset_led_on>
		}
		
		if (main_status == MOVING_MIX && time_counter_motion_mix < time_ms)
 5c0:	80 91 c3 00 	lds	r24, 0x00C3	; 0x8000c3 <main_status>
 5c4:	83 30       	cpi	r24, 0x03	; 3
 5c6:	09 f0       	breq	.+2      	; 0x5ca <main+0xba>
 5c8:	a6 cf       	rjmp	.-180    	; 0x516 <main+0x6>
 5ca:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <time_counter_motion_mix>
 5ce:	50 91 b3 00 	lds	r21, 0x00B3	; 0x8000b3 <time_counter_motion_mix+0x1>
 5d2:	60 91 b4 00 	lds	r22, 0x00B4	; 0x8000b4 <time_counter_motion_mix+0x2>
 5d6:	70 91 b5 00 	lds	r23, 0x00B5	; 0x8000b5 <time_counter_motion_mix+0x3>
 5da:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <time_ms>
 5de:	90 91 bf 00 	lds	r25, 0x00BF	; 0x8000bf <time_ms+0x1>
 5e2:	a0 91 c0 00 	lds	r26, 0x00C0	; 0x8000c0 <time_ms+0x2>
 5e6:	b0 91 c1 00 	lds	r27, 0x00C1	; 0x8000c1 <time_ms+0x3>
 5ea:	48 17       	cp	r20, r24
 5ec:	59 07       	cpc	r21, r25
 5ee:	6a 07       	cpc	r22, r26
 5f0:	7b 07       	cpc	r23, r27
 5f2:	08 f0       	brcs	.+2      	; 0x5f6 <main+0xe6>
 5f4:	90 cf       	rjmp	.-224    	; 0x516 <main+0x6>
		{
			time_counter_motion_mix = time_ms + motion_mix_blink_period;
 5f6:	8c 50       	subi	r24, 0x0C	; 12
 5f8:	9e 4f       	sbci	r25, 0xFE	; 254
 5fa:	af 4f       	sbci	r26, 0xFF	; 255
 5fc:	bf 4f       	sbci	r27, 0xFF	; 255
 5fe:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <time_counter_motion_mix>
 602:	90 93 b3 00 	sts	0x00B3, r25	; 0x8000b3 <time_counter_motion_mix+0x1>
 606:	a0 93 b4 00 	sts	0x00B4, r26	; 0x8000b4 <time_counter_motion_mix+0x2>
 60a:	b0 93 b5 00 	sts	0x00B5, r27	; 0x8000b5 <time_counter_motion_mix+0x3>
			
			motion_mix_time_counter++;
 60e:	80 91 ae 00 	lds	r24, 0x00AE	; 0x8000ae <motion_mix_time_counter>
 612:	8f 5f       	subi	r24, 0xFF	; 255
 614:	80 93 ae 00 	sts	0x00AE, r24	; 0x8000ae <motion_mix_time_counter>
			if (motion_mix_time_counter == motion_mix_time_var)
 618:	90 91 a8 00 	lds	r25, 0x00A8	; 0x8000a8 <motion_mix_time_var>
 61c:	89 13       	cpse	r24, r25
 61e:	03 c0       	rjmp	.+6      	; 0x626 <main+0x116>
			{
				proccess_status(button_on_off_single_click);
 620:	80 e0       	ldi	r24, 0x00	; 0
 622:	8a de       	rcall	.-748    	; 0x338 <proccess_status>
 624:	78 cf       	rjmp	.-272    	; 0x516 <main+0x6>
			} else {
				if (reset_led_status) reset_led_off();
 626:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <reset_led_status>
 62a:	88 23       	and	r24, r24
 62c:	11 f0       	breq	.+4      	; 0x632 <main+0x122>
 62e:	7e de       	rcall	.-772    	; 0x32c <reset_led_off>
 630:	01 c0       	rjmp	.+2      	; 0x634 <main+0x124>
				else reset_led_on();
 632:	75 de       	rcall	.-790    	; 0x31e <reset_led_on>
				
				motion_mix_period_counter++;
 634:	80 91 af 00 	lds	r24, 0x00AF	; 0x8000af <motion_mix_period_counter>
 638:	8f 5f       	subi	r24, 0xFF	; 255
 63a:	80 93 af 00 	sts	0x00AF, r24	; 0x8000af <motion_mix_period_counter>
				if (motion_mix_period_counter == motion_mix_period_var)
 63e:	90 91 a9 00 	lds	r25, 0x00A9	; 0x8000a9 <motion_mix_period_var>
 642:	89 13       	cpse	r24, r25
 644:	68 cf       	rjmp	.-304    	; 0x516 <main+0x6>
				{
					motion_mix_period_counter = 0;
 646:	10 92 af 00 	sts	0x00AF, r1	; 0x8000af <motion_mix_period_counter>
					if (motion_status == FORWARD) motion_reverse();
 64a:	80 91 b1 00 	lds	r24, 0x00B1	; 0x8000b1 <motion_status>
 64e:	81 30       	cpi	r24, 0x01	; 1
 650:	11 f4       	brne	.+4      	; 0x656 <main+0x146>
 652:	4f de       	rcall	.-866    	; 0x2f2 <motion_reverse>
 654:	60 cf       	rjmp	.-320    	; 0x516 <main+0x6>
					else motion_forward();
 656:	40 de       	rcall	.-896    	; 0x2d8 <motion_forward>
 658:	5e cf       	rjmp	.-324    	; 0x516 <main+0x6>

0000065a <_exit>:
 65a:	f8 94       	cli

0000065c <__stop_program>:
 65c:	ff cf       	rjmp	.-2      	; 0x65c <__stop_program>
